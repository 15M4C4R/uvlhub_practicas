# Use an official Python runtime as a parent image
FROM python:3.12-alpine

# Set this environment variable to suppress the "Running as root" warning from pip
ENV PIP_ROOT_USER_ACTION=ignore

# Install necessary packages
RUN apk add --no-cache mariadb-client \
    && apk add --no-cache --virtual .build-deps gcc musl-dev python3-dev libffi-dev \
    && apk add --no-cache curl \
    && apk add --no-cache bash \
    && apk add --no-cache openrc

# Install Docker
RUN apk add --no-cache \
    device-mapper \
    shadow \
    && curl -fsSL https://download.docker.com/linux/static/stable/x86_64/docker-20.10.7.tgz | tar xzvf - --strip 1 -C /usr/local/bin docker/docker \
    && curl -fsSL "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose \
    && addgroup docker \
    && adduser -S -G docker user \
    && adduser user root

# Set the working directory in the container to /app
WORKDIR /app

# Copy requirements.txt to the /app working directory
COPY requirements.txt .

# Copy the wait-for-db.sh script and set execution permissions
COPY --chmod=+x scripts/wait-for-db.sh ./scripts/

# Copy the init-testing-db.sh script and set execution permissions
COPY --chmod=+x scripts/init-testing-db.sh ./scripts/

# Copy files
COPY rosemary/ ./rosemary
COPY setup.py ./
COPY docker/ ./docker

# Update pip
RUN pip install --no-cache-dir --upgrade pip

# Install any needed packages specified in requirements.txt
RUN pip install -r requirements.txt

# Install Rosemary
RUN pip install -e ./

# Expose port 5000 for the Flask app
EXPOSE 5000